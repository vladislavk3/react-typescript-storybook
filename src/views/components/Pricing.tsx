import Button from '@material-ui/core/Button'
import Card from '@material-ui/core/Card'
import CardContent from '@material-ui/core/CardContent'
import Container from '@material-ui/core/Container'
import Grid from '@material-ui/core/Grid'
import Slider from '@material-ui/core/Slider'
import { makeStyles } from '@material-ui/core/styles'
import Typography from '@material-ui/core/Typography'
import AttachMoneyIcon from '@material-ui/icons/AttachMoney'
import DoneIcon from '@material-ui/icons/Done'
import MoneyOffIcon from '@material-ui/icons/MoneyOff'
import React, { useState } from 'react'

const useStyles = makeStyles(theme => ({
  card: {
    backgroundColor: '#fcfaf3',
    height: '79vh',
  },
  heroContent: {
    padding: theme.spacing(6, 0, 4),
  },
  cardHeader: {
    backgroundColor: '#193e60',
    color: 'white',
    height: theme.spacing(26),
    borderRadius: '0 0 15px 15px',
  },
  cardHeaderItem: {
    margin: theme.spacing(2),
  },
  cardHeaderTitle: {
    margin: theme.spacing(2),
    display: 'flex',
    justifyContent: 'center',
  },
  cardHeaderIcon: {
    backgroundColor: '#ffce50',
    color: 'white',
    padding: theme.spacing(1, 1),
    borderRadius: '50%',
    display: 'inline-table',
  },
  cardSubTitle: {
    fontSize: '15px',
    fontWeight: 'bold',
    backgroundColor: '#85d0ca',
    margin: '8px 0px 4px 8px',
    padding: '0 5px 0px 5px',
    borderRadius: '6px',
  },
  cardContent: {
    padding: theme.spacing(3),
  },
  cardAction: {
    backgroundColor: '#ffce50',
    color: '#193e60',
    marginTop: theme.spacing(7),
    marginBottom: theme.spacing(3),
    padding: theme.spacing(1, 1.5),
    borderRadius: '20px',
    '&:hover': {
      backgroundColor: '#ffce50',
    },
  },
  cardPricing: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'baseline',
    margin: theme.spacing(2),
  },
  customColor: {
    color: '#193e60',
  },
  tierDescription: {
    display: 'flex',
    marginTop: '1px',
  },
  doneIcon: {
    color: '#87d0ca',
    marginRight: '5px',
  },
  seatsCard: {
    padding: theme.spacing(1),
    backgroundColor: '#fcfaf3',
  },
}))

const tiersData = [
  {
    id: 0,
    title: 'Croptomize',
    price: 0,
    description: [
      'Criptomize Intelligence - commondity price probabilities and grain market education',
      'Farm CFO Lite estimates cost of production and farm profitability to inform grain marketing decisions',
      'Local cash grain bids at your fingertips',
    ],
    buttonText: 'Sign up',
    seats: 0,
  },
  {
    id: 1,
    title: 'Croptiomize',
    subtitle: 'PRO',
    price: 30,
    description: [
      'All features in free subscription',
      'Grain hedging',
      'Recommendations generated by the Croptomize statistical frame',
      'Full access to suite of Croptomize Intelligence tools: pricing frames for all available grain contracts, historical data, premium market commentary, data analytics, and more precise hedging tools.',
      'Dynamically estimate farm profitability based on live market prices',
    ],
    buttonText: 'Purchase',
    seats: 1,
  },
]

const seats = [
  {
    value: 1,
    label: '1',
  },
  {
    value: 5,
    label: '5',
  },
  {
    value: 10,
    label: '10',
  },
  {
    value: 20,
    label: '20',
  },
  {
    value: 30,
    label: '30',
  },
  {
    value: 40,
    label: '40',
  },
  {
    value: 50,
    label: '50',
  },
]

function Pricing() {
  const classes = useStyles()
  const [tiers, setTiers] = useState(tiersData)

  const onChangeSeats = (id: any, val: any) => {
    const matchIdx = tiers.findIndex(item => item.id === id)
    tiers[matchIdx]['seats'] = val
    setTiers(tiers)
  }

  return (
    <>
      <Container maxWidth="sm" component="main" className={classes.heroContent}>
        <Typography variant="h5" align="center" className={classes.customColor}>
          Croptomize Pricing Tiers
        </Typography>
      </Container>
      <Container maxWidth="md" component="main">
        <Grid container spacing={5} alignItems="center">
          {tiers.map(tier => (
            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={6}>
              <Card className={classes.card}>
                <CardContent className={classes.cardHeader}>
                  <Typography align="center" className={classes.cardHeaderItem}>
                    {tier.price === 0 ? (
                      <MoneyOffIcon className={classes.cardHeaderIcon} />
                    ) : (
                      <AttachMoneyIcon className={classes.cardHeaderIcon} />
                    )}
                  </Typography>
                  <Typography variant="h5" align="center" className={classes.cardHeaderTitle}>
                    {tier.title}
                    {tier.subtitle ? <div className={classes.cardSubTitle}>{tier.subtitle}</div> : null}
                  </Typography>
                  {tier.price === 0 ? (
                    <div className={classes.cardPricing}>
                      <Typography variant="h4">Free</Typography>
                    </div>
                  ) : (
                    <div className={classes.cardPricing}>
                      <Typography variant="h4">${tier.price * tier.seats}</Typography>
                      <Typography variant="h6">/month</Typography>
                    </div>
                  )}
                  {tier.price === 0 ? null : (
                    <Card className={classes.seatsCard}>
                      <Typography variant="subtitle1" align="center" className={classes.customColor}>
                        Number of Seats
                      </Typography>
                      <Slider
                        defaultValue={tier.seats}
                        aria-labelledby="discrete-slider-custom"
                        min={1}
                        max={50}
                        marks={seats}
                        onChange={(_event, value) => onChangeSeats(tier.id, value)}
                      />
                    </Card>
                  )}
                </CardContent>
                <CardContent className={classes.cardContent}>
                  <Button fullWidth className={classes.cardAction}>
                    {tier.buttonText}
                  </Button>
                  <Typography variant="h5" className={classes.customColor}>
                    iOS App Features Include:
                  </Typography>
                  <ul>
                    {tier.description.map(line => (
                      <Typography component="li" variant="subtitle1" className={classes.tierDescription} key={line}>
                        <DoneIcon className={classes.doneIcon} />
                        <div className={classes.customColor}>{line}</div>
                      </Typography>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>
      </Container>
    </>
  )
}

export default Pricing
